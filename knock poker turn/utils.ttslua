function get_seated_players() -- for use if the built in getSeatedPlayers() doesn't work
    local seated_players = {}
    for _,p in ipairs(PLAYER_COLORS) do
        if Player[p].seated then
            table.insert(seated_players, p)
        end
    end
    return seated_players
end

function newNextPlayers()
    local np = {}
    local seated_players = get_seated_players()
    -- local seated_players = getSeatedPlayers()
    for n,player in ipairs(seated_players) do
        np[player] = seated_players[n + 1]
    end
    np[seated_players[#seated_players]] = seated_players[1]
    -- for i,j in pairs(np) do
    --     msg = i .. '-->' .. j
    --     printToAll(msg)
    -- end
    return np
end

function wait(n)
    for i=1,n do
        coroutine.yield()
    end
end

function getDeck(zone)
    for _,o in ipairs(zone.getObjects()) do
        if o.type == "Deck" then
            return o
        end
    end
    return nil
end

function spectate(player)
    if player.color != 'Grey' then
        local msg = Player[player.color].steam_name .. " is now spectating."
        Player[player.color].changeColor('Grey')
        broadcastToAll(msg, 'Grey')
    else
        broadcastToColor('You are already spectating!', player.color, player.color)
    end
end
